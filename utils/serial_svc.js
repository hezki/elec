function datestamp(){var t=new Date;return t.toJSON().replace("T"," ").replace("Z","")}function log(t,s){s?fs.appendFileSync(path.resolve(__dirname,"../../log/serial.log"),"\n\n"+datestamp()+"	"+t+"\n\n"):fs.appendFileSync(path.resolve(__dirname,"../../log/serial.log"),t)}var child_process=require("child_process"),spawn=child_process.spawn,forever=require("forever-monitor"),path=require("path"),stripAnsi=require("strip-ansi"),fs=require("fs");process.on("uncaughtException",function(t){log("APP_ERR",1),log(t,1),log(t.stack,1)}),forever.Monitor.prototype.trySpawn=function(){var t,s=this.parser(this.command,this.args.slice());if(/[^\w]node$/.test(this.command)&&this.checkFile&&!this.childExists)try{t=fs.statSync(this.args[0]),this.childExists=!0}catch(i){return!1}return this.spawnWith.cwd=this.spawnWith.cwd||this.cwd,this.spawnWith.env=this._getEnv(),"win32"===process.platform&&(this.spawnWith.detached=!1),this.stdio&&(this.spawnWith.stdio=this.stdio),this.fork?(this.stdio||(this.spawnWith.stdio=["pipe","pipe","pipe","ipc"]),spawn(s.command,s.args,this.spawnWith)):spawn(s.command,s.args,this.spawnWith)};var opt={cwd:path.resolve(__dirname,"../../"),outFile:path.resolve(__dirname,"../../log/serial out.log")},child=new forever.Monitor(path.resolve(__dirname,"./serial.js"),opt);child.on("exit",function(t){log("EXIT",1)}).on("start",function(){log("START",1)}).on("error",function(t){log("ERROR",1),log(t&&t.message?t.message:t,1),t.stack&&log(t.stack,1)}).on("restart",function(t){log("RESTART",1)}).on("stop",function(t){log("STOP",1)}).on("stdout",function(t){log(stripAnsi(t))}).on("stderr",function(t){log(stripAnsi(t))}).start();
//# sourceMappingURL=serial_svc.js.map